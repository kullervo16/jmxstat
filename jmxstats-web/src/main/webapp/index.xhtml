<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html">
    <h:head>
        <title>JMX Stats demo page</title>        
        <meta charset="utf-8"/>
        <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
        <meta name="viewport" content="width=device-width, initial-scale=1"/>
        <meta name="description" content=""/>
        <meta name="author" content=""/>   
        <script src="clientjs/jquery.min.js"></script>
        <script src="clientjs/bootstrap.min.js"></script>        
        <!-- Angular JS-->        
        <script src="clientjs/angular.js"></script>
        <!-- Bootstrap core CSS-->
        <link href="css/bootstrap.min.css" rel="stylesheet"/>        
        <!-- Bootstrap theme-->
        <link href="css/bootstrap-theme.min.css" rel="stylesheet"/>        
        <script src="clientjs/ui-bootstrap-0.14.3.js"></script>
        <script src="clientjs/ui-bootstrap-tpls-0.14.3.js"></script>
        <script src="clientjs/app.js"></script>    
    </h:head>
    <h:body role="document" >
        <div role="main" class="container theme-showcase" ng-app="demo" ng-controller="demoController as demo">  
            <div class="jumbotron">
                <h1>JMX Stats demo</h1>                
            </div> 

            <h1>Counter</h1>
            <h2>Usecase</h2>
            <p>The counter counts events... the value simply increases and increases. Either by 1 (default increment) or by the value you specify</p>
            <p>Typical use cases are : </p>
            <ul>
                <li>Number of page hits (typically +1 at the detection point)</li>
                <li>Number of bytes read (typically +size of the message)</li>
            </ul>
            <h2>Examples</h2>
            <p>A non-JMX counter can be used in a scope... Here is an example of a counter in session scope : <span class="label label-default"><h:outputText value="${counter.counterValue}"/></span></p>
            <p>This means that if you would open a new browser and navigate to this page, the counter will restart from 1</p>
            <p>JMX counters are always application scoped, so it will probably not start at 1. And changes from your page will also be reflected to others : <span class="label label-default"><h:outputText value="${counter.jmxValue}"/></span></p>        
            <p>Since it is exposed via JMX, you can follow it with a JMX browser. The name of the counter is <span style="font-weight: bold">kullervo16.jmx:type=demoCounter</span></p>
            <p>If you have jolokia installed (like we do), you can access it via REST on this URL <span style="font-weight: bold"><a href="../jolokia-war-1.3.3/read/kullervo16.jmx:type=demoCounter/Value" target="_blank">jolokia-war-1.3.3/read/kullervo16.jmx:type=demoCounter/Value</a></span>, 
                which you can use to update the value via ajax like this (open a new browser and see this counter move automagically) <span class="label label-default">{{demoCounter.value}}</span></p>
        </div>

    </h:body>
</html>

